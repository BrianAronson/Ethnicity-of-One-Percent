*Remove extra SIPP info used for generating this dataset;
	Data SCF.Synthetic_Data;
		set SCF.Synthetic_Data;
		if HHSEX=. then delete;
	run;

*Fix data;
	Data SCFSynth;
		set SCF.Synthetic_Data;
		*Create proper SCF imputation names;
			SCFImput=substr(Y1,length(Y1),1);
		*Create proper Full Imputation names;
			_Imputation_=SCFImput+(5*(_Imputation_-1));
		*Since having problems using Ethnicity variable in regressions, make separate variabls;
		if Ethnicity1='Mainland Chinese' then MainlandChinese=1;  else MainlandChinese=0;
		if Ethnicity1='HK-Taiwan' then HKTaiwan=1;  else HKTaiwan=0;
		if Ethnicity1='Asian Indian' then AsianIndian=1;  else AsianIndian=0;
		if Ethnicity1='Other Asian' then OtherAsian=1;  else OtherAsian=0;
		if Ethnicity1='Native Asian'  then NativeAsian=1;  else NativeAsian=0;
		if Ethnicity1='Mexican' then Mexican=1;  else Mexican=0;
		if Ethnicity1='Cuban' then Cuban=1;  else Cuban=0;
		if Ethnicity1='Other Latino' then OtherLatino=1;  else OtherLatino=0;
		if Ethnicity1='Native Latino' then NativeLatino=1;  else NativeLatino=0;
		if Ethnicity1='Other Immigrants' then OtherImmigrants=1;  else OtherImmigrants=0;
		if Ethnicity1="Reference Catego" then NativeBlack=1;  else NativeBlack=0;
		if Ethnicity1='Asian Indian' then AsianIndian=1;  else AsianIndian=0;
		if Ethnicity1='Canada' then Canada=1;  else Canada=0;
		if Ethnicity1='European' then European=1;  else European=0;
		if Ethnicity1='Korean' then Korean=1;  else Korean=0;
		if Ethnicity1='Phillipino' then Phillipino=1;  else Phillipino=0;
		if Ethnicity1='Vietnam' then Vietnam=1;  else Vietnam=0;
		if Ethnicity1='Native White' then NativeWhite=1;  else NativeWhite=0;
*Create new descriptive variables;
		if Occat1=2 then SelfEmployed=1;
		else SelfEmployed=0;
		If Occat2=1 then ManageProf=1;
		else ManageProf=0;
	*new inheritance variables;
		if InheritanceType1_inherit=1 | InheritanceType2_inherit=1 | InheritanceType3_inherit=1 then Anyinherit=1; else Anyinherit=0;
		Totalinheritvalue=InheritanceValue1+InheritanceValue2+InheritanceValue3;

run;

*Create Wealth cutoff variables;
	proc sort data=scfsynth;
		by year;
	run;
	proc sort data=scftemp;
	by year;
	run;
	Proc Means P99 Data=SCFtemp;
		Var NetWorth StockValue mma IraValue LifeInsuranceValue Totalinheritvalue;
		by year;
		Weight wgt; 
		output 	out = Networth99 P99=Networth99v StockValuev mmav IraValuev LifeInsuranceValuev Totalinheritvaluev;
	run;
/*	Proc Means P95 Data=SCF.combined2;
		Var Networth;
		by year;
		Weight wgt; 
		output 	out = Networth95 P95=Networth95v;
	run;
	Proc Means P90 Data=SCF.combined2;
		Var Networth;
		by year;
		Weight wgt; 
		output 	out = Networth90 P90=Networth90v;
	run;
*/
*Merge wealth cutoffs into SCF.SCFSynth;
	DATA SCFSynth;
		merge SCFSynth Networth99;
		by year;
	*Create percentile labels;
	array financialvs (6) Networth StockValue mma IraValue LifeInsuranceValue Totalinheritvalue;
	array onepercentcutoffs (6) Networth99v StockValuev mmav IraValuev LifeInsuranceValuev Totalinheritvaluev;
	array onepercentdummies (6) Percent1 StockValue1 mma1 IraValue1 LifeInsuranceValue1 Totalinheritvalue1;
	Do i = 1 to 6;
		if financialvs(i)>onepercentcutoffs(i) then onepercentdummies(i)=1; else onepercentdummies(i)=0;
	End;
	*Remove extra years from scf.combined2;
		if year<1995 | year>2004 then delete;
	*Create Ethnicity variable of relevant ethnicities;
		if Ethnicity1 ~="Other Latino" & Ethnicity1 ~="Other Asian" & Ethnicity1 ~="Asian Indian" then Ethnicity2=Ethnicity1;
/*	*Create Region dummies for future ease;
		if Region="Midwest" then Midwest=1; else Midwest=0;
		if Region="Northeast" then Northeast=1; else Northeast=0;
		if Region="OtherRegi" then OtherRegion=1; else OtherRegion=0;
		if Region="South" then South=1; else South=0;
		if Region="West" then West=1; else West=0;
*/	*Create Assets variables;
		if lifeinsurancevalue>0 then OwnLifeInsurance=1; else OwnLifeInsurance=0;
		if BusinessValue>0 & BusinessValue~=. then InvestInBusiness=1; else InvestInBusiness=0;
	run;
